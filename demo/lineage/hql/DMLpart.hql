use clu_poc;

insert overwrite table clu_poc.CLU_ALL_COUNTRY_FLAT_FILE partition (COUNTRY='IN')
select 
FLAG_JOIN  ,
COUNTRY_CODE ,
DOMESTIC_CUSTOMER_GROUP_MEMBER  ,
CUSTOMER_BRANCH_NUMBER  ,
CUSTOMER_SERIAL_NUMBER  ,
MODE_FLAG ,
CUSTOMER_REFERENCE  ,
CUSTOMER_REFERENCE_2  ,
CUSTOMER_FULL_NAME  ,
CUSTOMER_NAME  ,
CUSTOMER_SHORT_NAME  ,
INDUSTRY_CODE  ,
MARKET_SECTOR_1  ,
CUSTOMER_LEGAL_TYPE  ,
GHO_CUSTOMER_CLASSIFICATION  ,
ACCOUNT_OFFICER  ,
CUSTOMER_STATUS  ,
COUNTRY_OF_REGISTRATION_RESIDENCE  ,
NATIONALITY_CODE  ,
CORRESPONDENT_BANK_ID  ,
CORRESPONDENT_BRANCH_ID  ,
CBID  ,
BANK_INDICATOR  ,
INDIVIDUAL_NON_INDIVUDUAL  ,
ACCOUNT_COUNTRY_CODE  ,
GROUP_MEMBER_ABBREVIATION  ,
ACCOUNT_BRANCH  ,
ACCOUNT_NUMBER_SERIAL  ,
ACCOUNT_SUFFIX  ,
ACCOUNT_REFERENCE  ,
CARD_NUMBER  ,
ACCOUNT_SHORT_NAME  ,
CURRENCY  ,
ACCOUNT_PRODUCT_TYPE  ,
ACCOUNT_STATUS  ,
ACCOUNT_TYPE  ,
ACCOUNT_FILE  ,
TRANSACTION_REF_NO  ,
SYSTEM_CODE_EXT  ,
EXTERNAL_ACCOUNT_NUMBER  ,
INTERNATIONAL_BANK_ACCOUNT_NUMBER  ,
EXTERNAL_ACCOUNT_GPS  ,
LOB_HUB_CUSTOMER_GROUP  ,
'\N' LOB_HUB_FATCA_CORP  ,
'\N' LOB_HUB_FATCA_NON_CORP  ,
'\N' LOB_HUB_GLEAM  ,
'\N' LOB_DR_GBM  ,
'\N' LOB_DR_CMB  ,
'\N' LOB_DR_GPB  ,
'\N' LOB_DR_RBWM  ,
'\N' LOB_LOCAL    ,
'\N' LOB_USE    ,
'\N' GUCI  ,
'\N' GRID      ,
'\N' GID      ,
'HUB' DATA_SYSTEM,
from_unixtime(unix_timestamp(),"yyyy-MM-dd")
from ALL_CUST_ACCT
where (ACCOUNT_REFERENCE is not null OR ACCOUNT_FILE='CP')
AND CUSTOMER_REFERENCE is not null; 

use clu_poc;

insert overwrite table  CUSTOMER_INDVL_JOINT
select
indvl.COUNTRY_CODE  ,
indvl.DOMESTIC_CUSTOMER_GROUP_MEMBER ,
indvl.CUSTOMER_BRANCH_NUMBER ,
indvl.CUSTOMER_SERIAL_NUMBER ,
indvl.MODE_FLAG ,
indvl.CUSTOMER_FULL_NAME ,
indvl.CUSTOMER_NAME ,
indvl.CUSTOMER_SHORT_NAME ,
indvl.INDUSTRY_CODE ,
indvl.MARKET_SECTOR_1 ,
indvl.CUSTOMER_LEGAL_TYPE ,
indvl.GHO_CUSTOMER_CLASSIFICATION ,
indvl.ACCOUNT_OFFICER ,
indvl.CUSTOMER_STATUS ,
indvl.COUNTRY_OF_REGISTRATION_RESIDENCE ,
indvl.NATIONALITY_CODE ,
indvl.CORRESPONDENT_BANK_ID ,
indvl.CORRESPONDENT_BRANCH_ID ,
joint.MODE_FLAG JOINT_MODE_FLAG ,
joint.COUNTRY_CODE JOINT_COUNTRY_CODE ,
joint.DOMESTIC_CUSTOMER_GROUP_MEMBER JOINT_DOMESTIC_GROUP_MEMBER ,
joint.CUSTOMER_BRANCH_NUMBER JOINT_CUSTOMER_BRANCH_NUMBER ,
joint.CUSTOMER_SERIAL_NUMBER JOINT_CUSTOMER_SERIAL_NUMBER 
from
CUSTOMER_INDVL indvl inner join CUSTOMER_JOINT joint
on indvl.COUNTRY_CODE=joint.DOMESTIC_CUSTOMER_COUNTRY_HOLDERS
and indvl.DOMESTIC_CUSTOMER_GROUP_MEMBER=joint.DOMESTIC_CUSTOMER_GROUP_MEMBER_HOLDER
and indvl.CUSTOMER_BRANCH_NUMBER=joint.DOMESTIC_CUSTOMER_GROUP_BRANCH_HOLDER
and indvl.CUSTOMER_SERIAL_NUMBER=joint.DOMESTIC_CUSTOMER_SERIAL_HOLDER
and indvl.MODE_FLAG=joint.MODE_FLAG;

use clu_poc;


insert overwrite table ALL_CUST_ACCT partition (ACCT='jtd')
select 
"Y" FLAG_JOIN,
cust.COUNTRY_CODE,
cust.DOMESTIC_CUSTOMER_GROUP_MEMBER,
cust.CUSTOMER_BRANCH_NUMBER,
cust.CUSTOMER_SERIAL_NUMBER,
cust.MODE_FLAG,
concat(CUST.COUNTRY_CODE, CUST.DOMESTIC_CUSTOMER_GROUP_MEMBER, lpad(concat(floor(CUST.CUSTOMER_BRANCH_NUMBER)),3,'0'), lpad(concat(floor(CUST.CUSTOMER_SERIAL_NUMBER)),6,'0')) as CUSTOMER_REFERENCE, 
 NULL CUSTOMER_REFERENCE_2,
cust.CUSTOMER_FULL_NAME,
cust.CUSTOMER_NAME,
cust.CUSTOMER_SHORT_NAME,
cust.INDUSTRY_CODE,
cust.MARKET_SECTOR_1,
cust.CUSTOMER_LEGAL_TYPE,
cust.GHO_CUSTOMER_CLASSIFICATION,
cust.ACCOUNT_OFFICER,
cust.CUSTOMER_STATUS,
cust.COUNTRY_OF_REGISTRATION_RESIDENCE,
cust.NATIONALITY_CODE,
cust.CORRESPONDENT_BANK_ID,
cust.CORRESPONDENT_BRANCH_ID,
CONCAT(CUST.CORRESPONDENT_BANK_ID ,CUST.CORRESPONDENT_BRANCH_ID) cbid,
cust_class.BANK_INDICATOR,
cust_class.INDIVIDUAL_NON_INDIVIDUAL,
accnt.ACCOUNT_COUNTRY_CODE,
accnt.GROUP_MEMBER_ABBREVIATION,
accnt.ACCOUNT_BRANCH,
accnt.ACCOUNT_NUMBER_SERIAL,
accnt.ACCOUNT_SUFFIX,
CONCAT(accnt.ACCOUNT_COUNTRY_CODE ,accnt.GROUP_MEMBER_ABBREVIATION, lpad(concat(floor(accnt.ACCOUNT_BRANCH)),3,'0') ,lpad(concat(floor(accnt.ACCOUNT_NUMBER_SERIAL)),6,'0') ,lpad(concat(floor(accnt.ACCOUNT_SUFFIX)),3,'0')) ACCOUNT_REFERENCE,
 NULL CARD_NUMBER,
accnt.ACCOUNT_SHORT_NAME,
accnt.CURRENCY,
accnt.ACCOUNT_PRODUCT_TYPE,
accnt.ACCOUNT_STATUS,
NULL ACCOUNT_TYPE,
'TD' ACCOUNT_FILE,
 NULL TRANSACTION_REF_NO,
 NULL SYSTEM_CODE_EXT,
 NULL EXTERNAL_ACCOUNT_NUMBER,
 NULL INTERNATIONAL_BANK_ACCOUNT_NUMBER,
 NULL EXTERNAL_ACCOUNT_GPS,
cust_group.CUSTOMER_GROUP  LOB_HUB_CUSTOMER_GROUP,
from_unixtime(unix_timestamp(),"yyyy-MM-dd")
 from 
customer_indvl_joint cust 
inner join 
td_account accnt 
on cust.JOINT_COUNTRY_CODE=accnt.ACCOUNT_COUNTRY_CODE
and cust.JOINT_DOMESTIC_GROUP_MEMBER=accnt.DOMESTIC_CUSTOMER_GROUP_MEMBER
and cust.JOINT_CUSTOMER_BRANCH_NUMBER=accnt.CUSTOMER_BRANCH_NUMBER
and cust.JOINT_CUSTOMER_SERIAL_NUMBER=accnt.CUSTOMER_SERIAL_NUMBER
--and cust.MODE_FLAG=accnt.MODE_FLAG
left outer join CUST_GROUP cust_group
on cust.GHO_CUSTOMER_CLASSIFICATION=cust_group.GHO_CUSTOMER_CLASSIFICATION
left outer join CUST_CLASSIFICATION cust_class
ON cust.COUNTRY_CODE=cust_class.COUNTRY_CODE
AND cust.DOMESTIC_CUSTOMER_GROUP_MEMBER=cust_class.GROUP_MEMBER_ABBREVIATION
AND cust.GHO_CUSTOMER_CLASSIFICATION=cust_class.GHO_CUSTOMER_CLASSIFICATION;

use clu_poc;

insert overwrite table clu_poc.CLU_ALL_COUNTRY_FLAT_FILE partition (COUNTRY ='IN')
select 
FF.FLAG_JOIN  ,
FF.COUNTRY_CODE,
FF.DOMESTIC_CUSTOMER_GROUP_MEMBER  ,
FF.CUSTOMER_BRANCH_NUMBER  ,
FF.CUSTOMER_SERIAL_NUMBER  ,
FF.MODE_FLAG  ,
FF.CUSTOMER_REFERENCE  ,
FF.CUSTOMER_REFERENCE_2  ,
FF.CUSTOMER_FULL_NAME  ,
FF.CUSTOMER_NAME  ,
FF.CUSTOMER_SHORT_NAME  ,
FF.INDUSTRY_CODE  ,
FF.MARKET_SECTOR_1  ,
FF.CUSTOMER_LEGAL_TYPE  ,
FF.GHO_CUSTOMER_CLASSIFICATION  ,
FF.ACCOUNT_OFFICER  ,
FF.CUSTOMER_STATUS  ,
FF.COUNTRY_OF_REGISTRATION_RESIDENCE  ,
FF.NATIONALITY_CODE  ,
FF.CORRESPONDENT_BANK_ID  ,
FF.CORRESPONDENT_BRANCH_ID  ,
FF.CBID  ,
FF.BANK_INDICATOR  ,
FF.INDIVIDUAL_NON_INDIVUDUAL  ,
FF.ACCOUNT_COUNTRY_CODE  ,
FF.GROUP_MEMBER_ABBREVIATION  ,
FF.ACCOUNT_BRANCH  ,
FF.ACCOUNT_NUMBER_SERIAL  ,
FF.ACCOUNT_SUFFIX  ,
FF.ACCOUNT_REFERENCE  ,
FF.CARD_NUMBER  ,
FF.ACCOUNT_SHORT_NAME  ,
FF.CURRENCY  ,
FF.ACCOUNT_PRODUCT_TYPE  ,
FF.ACCOUNT_STATUS  ,
FF.ACCOUNT_TYPE  ,
FF.ACCOUNT_FILE  ,
FF.TRANSACTION_REF_NO  ,
FF.SYSTEM_CODE_EXT  ,
FF.EXTERNAL_ACCOUNT_NUMBER,
IBAN.IBAN_ACCOUNT_NUMBER INTERNATIONAL_BANK_ACCOUNT_NUMBER  ,
FF.EXTERNAL_ACCOUNT_GPS  ,
FF.LOB_HUB_CUSTOMER_GROUP  ,
FF.LOB_HUB_FATCA_CORP  ,
FF.LOB_HUB_FATCA_NON_CORP  ,
FF.LOB_HUB_GLEAM  ,
FF.LOB_DR_GBM  ,
FF.LOB_DR_CMB  ,
FF.LOB_DR_GPB  ,
FF.LOB_DR_RBWM  ,
FF.LOB_LOCAL  ,
FF.LOB_USE    ,
FF.GUCI      ,
FF.GRID      ,
FF.GID      ,
FF.DATA_SYSTEM	,
from_unixtime(unix_timestamp(),"yyyy-MM-dd")
from CLU_ALL_COUNTRY_FLAT_FILE FF
LEFT OUTER JOIN IBAN_ACCT_FIELDS IBAN
ON FF.ACCOUNT_COUNTRY_CODE=IBAN.COUNTRY_CODE
AND FF.GROUP_MEMBER_ABBREVIATION=IBAN.GROUP_MEMBER_ABBREVIATION
AND FF.ACCOUNT_BRANCH=IBAN.ACCOUNT_BRANCH
AND FF.ACCOUNT_NUMBER_SERIAL=IBAN.ACCOUNT_NUMBER_SERIAL
AND FF.ACCOUNT_SUFFIX=IBAN.ACCOUNT_SUFFIX
AND FF.COUNTRY='IN'
AND FF.ACCOUNT_REFERENCE is not null
AND FF.CUSTOMER_REFERENCE is not null;

use clu_poc;

insert overwrite table clu_poc.CLU_ALL_COUNTRY_FLAT_FILE partition (COUNTRY ='IN')
select 
FF.FLAG_JOIN  ,
FF.COUNTRY_CODE,
FF.DOMESTIC_CUSTOMER_GROUP_MEMBER  ,
FF.CUSTOMER_BRANCH_NUMBER  ,
FF.CUSTOMER_SERIAL_NUMBER  ,
FF.MODE_FLAG  ,
FF.CUSTOMER_REFERENCE  ,
FF.CUSTOMER_REFERENCE_2  ,
FF.CUSTOMER_FULL_NAME  ,
FF.CUSTOMER_NAME  ,
FF.CUSTOMER_SHORT_NAME  ,
FF.INDUSTRY_CODE  ,
FF.MARKET_SECTOR_1  ,
FF.CUSTOMER_LEGAL_TYPE  ,
FF.GHO_CUSTOMER_CLASSIFICATION  ,
FF.ACCOUNT_OFFICER  ,
FF.CUSTOMER_STATUS  ,
FF.COUNTRY_OF_REGISTRATION_RESIDENCE  ,
FF.NATIONALITY_CODE  ,
FF.CORRESPONDENT_BANK_ID  ,
FF.CORRESPONDENT_BRANCH_ID  ,
FF.CBID  ,
FF.BANK_INDICATOR  ,
FF.INDIVIDUAL_NON_INDIVUDUAL  ,
FF.ACCOUNT_COUNTRY_CODE  ,
FF.GROUP_MEMBER_ABBREVIATION  ,
FF.ACCOUNT_BRANCH  ,
FF.ACCOUNT_NUMBER_SERIAL  ,
FF.ACCOUNT_SUFFIX  ,
FF.ACCOUNT_REFERENCE  ,
FF.CARD_NUMBER  ,
FF.ACCOUNT_SHORT_NAME  ,
FF.CURRENCY  ,
FF.ACCOUNT_PRODUCT_TYPE  ,
FF.ACCOUNT_STATUS  ,
FF.ACCOUNT_TYPE  ,
FF.ACCOUNT_FILE  ,
FF.TRANSACTION_REF_NO  ,
FF.SYSTEM_CODE_EXT  ,
FF.EXTERNAL_ACCOUNT_NUMBER,
FF.INTERNATIONAL_BANK_ACCOUNT_NUMBER  ,
FF.EXTERNAL_ACCOUNT_GPS  ,
FF.LOB_HUB_CUSTOMER_GROUP  ,
FF.LOB_HUB_FATCA_CORP  ,
FF.LOB_HUB_FATCA_NON_CORP  ,
FF.LOB_HUB_GLEAM  ,
FF.LOB_DR_GBM  ,
FF.LOB_DR_CMB  ,
FF.LOB_DR_GPB  ,
FF.LOB_DR_RBWM  ,
FF.LOB_LOCAL  ,
LOB.flat_file_lob_use_field LOB_USE  ,
FF.GUCI      ,
FF.GRID      ,
FF.GID      ,
FF.DATA_SYSTEM,
from_unixtime(unix_timestamp(),"yyyy-MM-dd")
from CLU_ALL_COUNTRY_FLAT_FILE FF
LEFT OUTER JOIN LOB_REF_TABLE_CORE LOB
ON FF.LOB_HUB_CUSTOMER_GROUP=LOB.source_field
AND FF.COUNTRY='IN'
AND FF.ACCOUNT_REFERENCE is not null
AND FF.CUSTOMER_REFERENCE is not null;


use clu_poc;

insert overwrite table clu_poc.CLU_ALL_COUNTRY_FLAT_FILE partition (COUNTRY ='IN')
select 
FF.FLAG_JOIN  ,
FF.COUNTRY_CODE,
FF.DOMESTIC_CUSTOMER_GROUP_MEMBER  ,
FF.CUSTOMER_BRANCH_NUMBER  ,
FF.CUSTOMER_SERIAL_NUMBER  ,
FF.MODE_FLAG  ,
FF.CUSTOMER_REFERENCE  ,
FF.CUSTOMER_REFERENCE_2  ,
FF.CUSTOMER_FULL_NAME  ,
FF.CUSTOMER_NAME  ,
FF.CUSTOMER_SHORT_NAME  ,
FF.INDUSTRY_CODE  ,
FF.MARKET_SECTOR_1  ,
FF.CUSTOMER_LEGAL_TYPE  ,
FF.GHO_CUSTOMER_CLASSIFICATION  ,
FF.ACCOUNT_OFFICER  ,
FF.CUSTOMER_STATUS  ,
FF.COUNTRY_OF_REGISTRATION_RESIDENCE  ,
FF.NATIONALITY_CODE  ,
FF.CORRESPONDENT_BANK_ID  ,
FF.CORRESPONDENT_BRANCH_ID  ,
FF.CBID  ,
FF.BANK_INDICATOR  ,
FF.INDIVIDUAL_NON_INDIVUDUAL  ,
FF.ACCOUNT_COUNTRY_CODE  ,
FF.GROUP_MEMBER_ABBREVIATION  ,
FF.ACCOUNT_BRANCH  ,
FF.ACCOUNT_NUMBER_SERIAL  ,
FF.ACCOUNT_SUFFIX  ,
FF.ACCOUNT_REFERENCE  ,
FF.CARD_NUMBER  ,
FF.ACCOUNT_SHORT_NAME  ,
FF.CURRENCY  ,
FF.ACCOUNT_PRODUCT_TYPE  ,
FF.ACCOUNT_STATUS  ,
FF.ACCOUNT_TYPE  ,
FF.ACCOUNT_FILE  ,
FF.TRANSACTION_REF_NO  ,
EXT.SYSTEM_CODE SYSTEM_CODE_EXT  ,
EXT.EXTERNAL_ACCOUNT_NUMBER  EXTERNAL_ACCOUNT_NUMBER,
FF.INTERNATIONAL_BANK_ACCOUNT_NUMBER  ,
FF.EXTERNAL_ACCOUNT_GPS  ,
FF.LOB_HUB_CUSTOMER_GROUP  ,
FF.LOB_HUB_FATCA_CORP  ,
FF.LOB_HUB_FATCA_NON_CORP  ,
FF.LOB_HUB_GLEAM  ,
FF.LOB_DR_GBM  ,
FF.LOB_DR_CMB  ,
FF.LOB_DR_GPB  ,
FF.LOB_DR_RBWM  ,
FF.LOB_LOCAL  ,
FF.LOB_USE    ,
FF.GUCI      ,
FF.GRID      ,
FF.GID      ,
FF.DATA_SYSTEM	,
from_unixtime(unix_timestamp(),"yyyy-MM-dd")
from CLU_ALL_COUNTRY_FLAT_FILE FF
LEFT OUTER JOIN EU_ACCT_FIELDS EXT
ON FF.COUNTRY_CODE=EXT.COUNTRY_CODE
AND FF.GROUP_MEMBER_ABBREVIATION=EXT.GROUP_MEMBER_ABBREVIATION
AND FF.CUSTOMER_BRANCH_NUMBER=EXT.ACCOUNT_BRANCH
AND FF.CUSTOMER_SERIAL_NUMBER=EXT.ACCOUNT_NUMBER_SERIAL
AND FF.ACCOUNT_SUFFIX=EXT.ACCOUNT_SUFFIX
AND FF.COUNTRY='IN'
AND FF.ACCOUNT_REFERENCE is not null
AND FF.CUSTOMER_REFERENCE is not null;

use clu_poc;

insert overwrite table clu_poc.CLU_ALL_COUNTRY_FLAT_FILE partition (COUNTRY ='IN')
select 
FF.FLAG_JOIN  ,
FF.COUNTRY_CODE,
FF.DOMESTIC_CUSTOMER_GROUP_MEMBER  ,
FF.CUSTOMER_BRANCH_NUMBER  ,
FF.CUSTOMER_SERIAL_NUMBER  ,
FF.MODE_FLAG  ,
FF.CUSTOMER_REFERENCE  ,
FF.CUSTOMER_REFERENCE_2  ,
FF.CUSTOMER_FULL_NAME  ,
FF.CUSTOMER_NAME  ,
FF.CUSTOMER_SHORT_NAME  ,
FF.INDUSTRY_CODE  ,
FF.MARKET_SECTOR_1  ,
FF.CUSTOMER_LEGAL_TYPE  ,
FF.GHO_CUSTOMER_CLASSIFICATION  ,
FF.ACCOUNT_OFFICER  ,
FF.CUSTOMER_STATUS  ,
FF.COUNTRY_OF_REGISTRATION_RESIDENCE  ,
FF.NATIONALITY_CODE  ,
FF.CORRESPONDENT_BANK_ID  ,
FF.CORRESPONDENT_BRANCH_ID  ,
FF.CBID  ,
FF.BANK_INDICATOR  ,
FF.INDIVIDUAL_NON_INDIVUDUAL  ,
FF.ACCOUNT_COUNTRY_CODE  ,
FF.GROUP_MEMBER_ABBREVIATION  ,
FF.ACCOUNT_BRANCH  ,
FF.ACCOUNT_NUMBER_SERIAL  ,
FF.ACCOUNT_SUFFIX  ,
FF.ACCOUNT_REFERENCE  ,
FF.CARD_NUMBER  ,
FF.ACCOUNT_SHORT_NAME  ,
FF.CURRENCY  ,
FF.ACCOUNT_PRODUCT_TYPE  ,
FF.ACCOUNT_STATUS  ,
FF.ACCOUNT_TYPE  ,
FF.ACCOUNT_FILE  ,
FF.TRANSACTION_REF_NO  ,
FF.SYSTEM_CODE_EXT  ,
FF.EXTERNAL_ACCOUNT_NUMBER  ,
FF.INTERNATIONAL_BANK_ACCOUNT_NUMBER  ,
FF.EXTERNAL_ACCOUNT_GPS  ,
FF.LOB_HUB_CUSTOMER_GROUP  ,
FF.LOB_HUB_FATCA_CORP  ,
FATCA.HSBC_BUSINESS_GROUP LOB_HUB_FATCA_NON_CORP  ,
FF.LOB_HUB_GLEAM  ,
FF.LOB_DR_GBM  ,
FF.LOB_DR_CMB  ,
FF.LOB_DR_GPB  ,
FF.LOB_DR_RBWM  ,
FF.LOB_LOCAL  ,
FF.LOB_USE    ,
FF.GUCI      ,
FF.GRID      ,
FF.GID      ,
FF.DATA_SYSTEM	,
from_unixtime(unix_timestamp(),"yyyy-MM-dd")
from CLU_ALL_COUNTRY_FLAT_FILE FF
LEFT OUTER JOIN NON_CORPORATE_FATCA_LOB FATCA
ON FF.COUNTRY_CODE=FATCA.COUNTRY_CODE
AND FF.DOMESTIC_CUSTOMER_GROUP_MEMBER=FATCA.DOMESTIC_CUSTOMER_GROUP_MEMBER
AND FF.CUSTOMER_BRANCH_NUMBER=FATCA.CUSTOMER_BRANCH_NUMBER
AND FF.CUSTOMER_SERIAL_NUMBER=FATCA.CUSTOMER_SERIAL_NUMBER
--AND FF.MODE_FLAG=FATCA.MODE_FLAG
AND FF.COUNTRY='IN'
AND ACCOUNT_REFERENCE is not null
AND CUSTOMER_REFERENCE is not null;

use clu_poc;

insert overwrite table ALL_CUST_ACCT partition (ACCT='jtd')
select 
"Y" FLAG_JOIN,
cust.COUNTRY_CODE,
cust.DOMESTIC_CUSTOMER_GROUP_MEMBER,
cust.CUSTOMER_BRANCH_NUMBER,
cust.CUSTOMER_SERIAL_NUMBER,
cust.MODE_FLAG,
concat(CUST.COUNTRY_CODE, CUST.DOMESTIC_CUSTOMER_GROUP_MEMBER, lpad(concat(floor(CUST.CUSTOMER_BRANCH_NUMBER)),3,'0'), lpad(concat(floor(CUST.CUSTOMER_SERIAL_NUMBER)),6,'0')) as CUSTOMER_REFERENCE, 
 NULL CUSTOMER_REFERENCE_2,
cust.CUSTOMER_FULL_NAME,
cust.CUSTOMER_NAME,
cust.CUSTOMER_SHORT_NAME,
cust.INDUSTRY_CODE,
cust.MARKET_SECTOR_1,
cust.CUSTOMER_LEGAL_TYPE,
cust.GHO_CUSTOMER_CLASSIFICATION,
cust.ACCOUNT_OFFICER,
cust.CUSTOMER_STATUS,
cust.COUNTRY_OF_REGISTRATION_RESIDENCE,
cust.NATIONALITY_CODE,
cust.CORRESPONDENT_BANK_ID,
cust.CORRESPONDENT_BRANCH_ID,
CONCAT(CUST.CORRESPONDENT_BANK_ID ,CUST.CORRESPONDENT_BRANCH_ID) cbid,
cust_class.BANK_INDICATOR,
cust_class.INDIVIDUAL_NON_INDIVIDUAL,
accnt.ACCOUNT_COUNTRY_CODE,
accnt.GROUP_MEMBER_ABBREVIATION,
accnt.ACCOUNT_BRANCH,
accnt.ACCOUNT_NUMBER_SERIAL,
accnt.ACCOUNT_SUFFIX,
CONCAT(accnt.ACCOUNT_COUNTRY_CODE ,accnt.GROUP_MEMBER_ABBREVIATION, lpad(concat(floor(accnt.ACCOUNT_BRANCH)),3,'0') ,lpad(concat(floor(accnt.ACCOUNT_NUMBER_SERIAL)),6,'0') ,lpad(concat(floor(accnt.ACCOUNT_SUFFIX)),3,'0')) ACCOUNT_REFERENCE,
 NULL CARD_NUMBER,
accnt.ACCOUNT_SHORT_NAME,
accnt.CURRENCY,
accnt.ACCOUNT_PRODUCT_TYPE,
accnt.ACCOUNT_STATUS,
NULL ACCOUNT_TYPE,
'TD' ACCOUNT_FILE,
 NULL TRANSACTION_REF_NO,
 NULL SYSTEM_CODE_EXT,
 NULL EXTERNAL_ACCOUNT_NUMBER,
 NULL INTERNATIONAL_BANK_ACCOUNT_NUMBER,
 NULL EXTERNAL_ACCOUNT_GPS,
cust_group.CUSTOMER_GROUP  LOB_HUB_CUSTOMER_GROUP,
from_unixtime(unix_timestamp(),"yyyy-MM-dd")
 from 
customer_indvl_joint cust 
inner join 
td_account accnt 
on cust.JOINT_COUNTRY_CODE=accnt.ACCOUNT_COUNTRY_CODE
and cust.JOINT_DOMESTIC_GROUP_MEMBER=accnt.DOMESTIC_CUSTOMER_GROUP_MEMBER
and cust.JOINT_CUSTOMER_BRANCH_NUMBER=accnt.CUSTOMER_BRANCH_NUMBER
and cust.JOINT_CUSTOMER_SERIAL_NUMBER=accnt.CUSTOMER_SERIAL_NUMBER
--and cust.MODE_FLAG=accnt.MODE_FLAG
left outer join CUST_GROUP cust_group
on cust.GHO_CUSTOMER_CLASSIFICATION=cust_group.GHO_CUSTOMER_CLASSIFICATION
left outer join CUST_CLASSIFICATION cust_class
ON cust.COUNTRY_CODE=cust_class.COUNTRY_CODE
AND cust.DOMESTIC_CUSTOMER_GROUP_MEMBER=cust_class.GROUP_MEMBER_ABBREVIATION
AND cust.GHO_CUSTOMER_CLASSIFICATION=cust_class.GHO_CUSTOMER_CLASSIFICATION;

use clu_poc;

insert overwrite table ALL_CUST_ACCT partition (ACCT='itd')
select 
"N" FLAG_JOIN,
cust.COUNTRY_CODE,
cust.DOMESTIC_CUSTOMER_GROUP_MEMBER,
cust.CUSTOMER_BRANCH_NUMBER,
cust.CUSTOMER_SERIAL_NUMBER,
cust.MODE_FLAG,
concat(CUST.COUNTRY_CODE, CUST.DOMESTIC_CUSTOMER_GROUP_MEMBER, lpad(concat(floor(CUST.CUSTOMER_BRANCH_NUMBER)),3,'0'), lpad(concat(floor(CUST.CUSTOMER_SERIAL_NUMBER)),6,'0')) as CUSTOMER_REFERENCE, 
 NULL CUSTOMER_REFERENCE_2,
cust.CUSTOMER_FULL_NAME,
cust.CUSTOMER_NAME,
cust.CUSTOMER_SHORT_NAME,
cust.INDUSTRY_CODE,
cust.MARKET_SECTOR_1,
cust.CUSTOMER_LEGAL_TYPE,
cust.GHO_CUSTOMER_CLASSIFICATION,
cust.ACCOUNT_OFFICER,
cust.CUSTOMER_STATUS,
cust.COUNTRY_OF_REGISTRATION_RESIDENCE,
cust.NATIONALITY_CODE,
cust.CORRESPONDENT_BANK_ID,
cust.CORRESPONDENT_BRANCH_ID,
CONCAT(CUST.CORRESPONDENT_BANK_ID ,CUST.CORRESPONDENT_BRANCH_ID) cbid,
cust_class.BANK_INDICATOR,
cust_class.INDIVIDUAL_NON_INDIVIDUAL,
accnt.ACCOUNT_COUNTRY_CODE,
accnt.GROUP_MEMBER_ABBREVIATION,
accnt.ACCOUNT_BRANCH,
accnt.ACCOUNT_NUMBER_SERIAL,
accnt.ACCOUNT_SUFFIX,
CONCAT(accnt.ACCOUNT_COUNTRY_CODE ,accnt.GROUP_MEMBER_ABBREVIATION, lpad(concat(floor(accnt.ACCOUNT_BRANCH)),3,'0') ,lpad(concat(floor(accnt.ACCOUNT_NUMBER_SERIAL)),6,'0') ,lpad(concat(floor(accnt.ACCOUNT_SUFFIX)),3,'0')) ACCOUNT_REFERENCE,
 NULL CARD_NUMBER,
accnt.ACCOUNT_SHORT_NAME,
accnt.CURRENCY,
accnt.ACCOUNT_PRODUCT_TYPE,
accnt.ACCOUNT_STATUS,
NULL ACCOUNT_TYPE,
'TD' ACCOUNT_FILE,
 NULL TRANSACTION_REF_NO,
 NULL SYSTEM_CODE_EXT,
 NULL EXTERNAL_ACCOUNT_NUMBER,
 NULL INTERNATIONAL_BANK_ACCOUNT_NUMBER,
 NULL EXTERNAL_ACCOUNT_GPS,
cust_group.CUSTOMER_GROUP  LOB_HUB_CUSTOMER_GROUP,
from_unixtime(unix_timestamp(),"yyyy-MM-dd")
 from 
CUSTOMER_INDVL cust
right outer join
td_account accnt
on cust.COUNTRY_CODE=accnt.ACCOUNT_COUNTRY_CODE
and cust.DOMESTIC_CUSTOMER_GROUP_MEMBER=accnt.DOMESTIC_CUSTOMER_GROUP_MEMBER
and cust.CUSTOMER_BRANCH_NUMBER=accnt.CUSTOMER_BRANCH_NUMBER
and cust.CUSTOMER_SERIAL_NUMBER=accnt.CUSTOMER_SERIAL_NUMBER
and cust.MODE_FLAG=accnt.MODE_FLAG
left outer join CUST_GROUP cust_group
on cust.GHO_CUSTOMER_CLASSIFICATION=cust_group.GHO_CUSTOMER_CLASSIFICATION
left outer join CUST_CLASSIFICATION cust_class
ON cust.COUNTRY_CODE=cust_class.COUNTRY_CODE
AND cust.DOMESTIC_CUSTOMER_GROUP_MEMBER=cust_class.GROUP_MEMBER_ABBREVIATION
AND cust.GHO_CUSTOMER_CLASSIFICATION=cust_class.GHO_CUSTOMER_CLASSIFICATION;

use clu_poc;

insert overwrite table ALL_CUST_ACCT partition (ACCT='jtc')
select 
"Y" FLAG_JOIN,
cust.COUNTRY_CODE,
cust.DOMESTIC_CUSTOMER_GROUP_MEMBER,
cust.CUSTOMER_BRANCH_NUMBER,
cust.CUSTOMER_SERIAL_NUMBER,
cust.MODE_FLAG,
concat(CUST.COUNTRY_CODE, CUST.DOMESTIC_CUSTOMER_GROUP_MEMBER, lpad(concat(floor(CUST.CUSTOMER_BRANCH_NUMBER)),3,'0'), lpad(concat(floor(CUST.CUSTOMER_SERIAL_NUMBER)),6,'0')) as CUSTOMER_REFERENCE, 
 NULL CUSTOMER_REFERENCE_2,
cust.CUSTOMER_FULL_NAME,
cust.CUSTOMER_NAME,
cust.CUSTOMER_SHORT_NAME,
cust.INDUSTRY_CODE,
cust.MARKET_SECTOR_1,
cust.CUSTOMER_LEGAL_TYPE,
cust.GHO_CUSTOMER_CLASSIFICATION,
cust.ACCOUNT_OFFICER,
cust.CUSTOMER_STATUS,
cust.COUNTRY_OF_REGISTRATION_RESIDENCE,
cust.NATIONALITY_CODE,
cust.CORRESPONDENT_BANK_ID,
cust.CORRESPONDENT_BRANCH_ID,
CONCAT(CUST.CORRESPONDENT_BANK_ID ,CUST.CORRESPONDENT_BRANCH_ID) cbid,
cust_class.BANK_INDICATOR,
cust_class.INDIVIDUAL_NON_INDIVIDUAL,
accnt.ACCOUNT_COUNTRY_CODE,
accnt.GROUP_MEMBER_ABBREVIATION,
accnt.ACCOUNT_BRANCH,
accnt.ACCOUNT_NUMBER_SERIAL,
accnt.ACCOUNT_SUFFIX,
CONCAT(accnt.ACCOUNT_COUNTRY_CODE ,accnt.GROUP_MEMBER_ABBREVIATION, lpad(concat(floor(accnt.ACCOUNT_BRANCH)),3,'0') ,lpad(concat(floor(accnt.ACCOUNT_NUMBER_SERIAL)),6,'0') ,lpad(concat(floor(accnt.ACCOUNT_SUFFIX)),3,'0')) ACCOUNT_REFERENCE,
 NULL CARD_NUMBER,
accnt.ACCOUNT_SHORT_NAME,
accnt.CURRENCY,
accnt.ACCOUNT_PRODUCT_TYPE,
accnt.ACCOUNT_STATUS,
NULL ACCOUNT_TYPE,
'TC' ACCOUNT_FILE,
 NULL TRANSACTION_REF_NO,
 NULL SYSTEM_CODE_EXT,
 NULL EXTERNAL_ACCOUNT_NUMBER,
 NULL INTERNATIONAL_BANK_ACCOUNT_NUMBER,
 NULL EXTERNAL_ACCOUNT_GPS,
cust_group.CUSTOMER_GROUP  LOB_HUB_CUSTOMER_GROUP,
from_unixtime(unix_timestamp(),"yyyy-MM-dd")
 from 
customer_indvl_joint cust 
inner join 
tc_account accnt 
on cust.JOINT_COUNTRY_CODE=accnt.ACCOUNT_COUNTRY_CODE
and cust.JOINT_DOMESTIC_GROUP_MEMBER=accnt.DOMESTIC_CUSTOMER_GROUP_MEMBER
and cust.JOINT_CUSTOMER_BRANCH_NUMBER=accnt.CUSTOMER_BRANCH_NUMBER
and cust.JOINT_CUSTOMER_SERIAL_NUMBER=accnt.CUSTOMER_SERIAL_NUMBER
--and cust.MODE_FLAG=accnt.MODE_FLAG
left outer join CUST_GROUP cust_group
on cust.GHO_CUSTOMER_CLASSIFICATION=cust_group.GHO_CUSTOMER_CLASSIFICATION
left outer join CUST_CLASSIFICATION cust_class
ON cust.COUNTRY_CODE=cust_class.COUNTRY_CODE
AND cust.DOMESTIC_CUSTOMER_GROUP_MEMBER=cust_class.GROUP_MEMBER_ABBREVIATION
AND cust.GHO_CUSTOMER_CLASSIFICATION=cust_class.GHO_CUSTOMER_CLASSIFICATION;

use clu_poc;

insert overwrite table ALL_CUST_ACCT partition (ACCT='itc')
select 
"N" FLAG_JOIN,
cust.COUNTRY_CODE,
cust.DOMESTIC_CUSTOMER_GROUP_MEMBER,
cust.CUSTOMER_BRANCH_NUMBER,
cust.CUSTOMER_SERIAL_NUMBER,
cust.MODE_FLAG,
concat(CUST.COUNTRY_CODE, CUST.DOMESTIC_CUSTOMER_GROUP_MEMBER, lpad(concat(floor(CUST.CUSTOMER_BRANCH_NUMBER)),3,'0'), lpad(concat(floor(CUST.CUSTOMER_SERIAL_NUMBER)),6,'0')) as CUSTOMER_REFERENCE, 
 NULL CUSTOMER_REFERENCE_2,
cust.CUSTOMER_FULL_NAME,
cust.CUSTOMER_NAME,
cust.CUSTOMER_SHORT_NAME,
cust.INDUSTRY_CODE,
cust.MARKET_SECTOR_1,
cust.CUSTOMER_LEGAL_TYPE,
cust.GHO_CUSTOMER_CLASSIFICATION,
cust.ACCOUNT_OFFICER,
cust.CUSTOMER_STATUS,
cust.COUNTRY_OF_REGISTRATION_RESIDENCE,
cust.NATIONALITY_CODE,
cust.CORRESPONDENT_BANK_ID,
cust.CORRESPONDENT_BRANCH_ID,
CONCAT(CUST.CORRESPONDENT_BANK_ID ,CUST.CORRESPONDENT_BRANCH_ID) cbid,
cust_class.BANK_INDICATOR,
cust_class.INDIVIDUAL_NON_INDIVIDUAL,
accnt.ACCOUNT_COUNTRY_CODE,
accnt.GROUP_MEMBER_ABBREVIATION,
accnt.ACCOUNT_BRANCH,
accnt.ACCOUNT_NUMBER_SERIAL,
accnt.ACCOUNT_SUFFIX,
CONCAT(accnt.ACCOUNT_COUNTRY_CODE ,accnt.GROUP_MEMBER_ABBREVIATION, lpad(concat(floor(accnt.ACCOUNT_BRANCH)),3,'0') ,lpad(concat(floor(accnt.ACCOUNT_NUMBER_SERIAL)),6,'0') ,lpad(concat(floor(accnt.ACCOUNT_SUFFIX)),3,'0')) ACCOUNT_REFERENCE,
 NULL CARD_NUMBER,
accnt.ACCOUNT_SHORT_NAME,
accnt.CURRENCY,
accnt.ACCOUNT_PRODUCT_TYPE,
accnt.ACCOUNT_STATUS,
NULL ACCOUNT_TYPE,
'TC' ACCOUNT_FILE,
 NULL TRANSACTION_REF_NO,
 NULL SYSTEM_CODE_EXT,
 NULL EXTERNAL_ACCOUNT_NUMBER,
 NULL INTERNATIONAL_BANK_ACCOUNT_NUMBER,
 NULL EXTERNAL_ACCOUNT_GPS,
cust_group.CUSTOMER_GROUP  LOB_HUB_CUSTOMER_GROUP,
from_unixtime(unix_timestamp(),"yyyy-MM-dd")
 from 
CUSTOMER_INDVL cust
right outer join
tc_account accnt
on cust.COUNTRY_CODE=accnt.ACCOUNT_COUNTRY_CODE
and cust.DOMESTIC_CUSTOMER_GROUP_MEMBER=accnt.DOMESTIC_CUSTOMER_GROUP_MEMBER
and cust.CUSTOMER_BRANCH_NUMBER=accnt.CUSTOMER_BRANCH_NUMBER
and cust.CUSTOMER_SERIAL_NUMBER=accnt.CUSTOMER_SERIAL_NUMBER
and cust.MODE_FLAG=accnt.MODE_FLAG
left outer join CUST_GROUP cust_group
on cust.GHO_CUSTOMER_CLASSIFICATION=cust_group.GHO_CUSTOMER_CLASSIFICATION
left outer join CUST_CLASSIFICATION cust_class
ON cust.COUNTRY_CODE=cust_class.COUNTRY_CODE
AND cust.DOMESTIC_CUSTOMER_GROUP_MEMBER=cust_class.GROUP_MEMBER_ABBREVIATION
AND cust.GHO_CUSTOMER_CLASSIFICATION=cust_class.GHO_CUSTOMER_CLASSIFICATION;

use clu_poc;

insert overwrite table ALL_CUST_ACCT partition (ACCT='jpl')
select 
"Y" FLAG_JOIN,
cust.COUNTRY_CODE,
cust.DOMESTIC_CUSTOMER_GROUP_MEMBER,
cust.CUSTOMER_BRANCH_NUMBER,
cust.CUSTOMER_SERIAL_NUMBER,
cust.MODE_FLAG,
concat(CUST.COUNTRY_CODE, CUST.DOMESTIC_CUSTOMER_GROUP_MEMBER, lpad(concat(floor(CUST.CUSTOMER_BRANCH_NUMBER)),3,'0'), lpad(concat(floor(CUST.CUSTOMER_SERIAL_NUMBER)),6,'0')) as CUSTOMER_REFERENCE, 
 NULL CUSTOMER_REFERENCE_2,
cust.CUSTOMER_FULL_NAME,
cust.CUSTOMER_NAME,
cust.CUSTOMER_SHORT_NAME,
cust.INDUSTRY_CODE,
cust.MARKET_SECTOR_1,
cust.CUSTOMER_LEGAL_TYPE,
cust.GHO_CUSTOMER_CLASSIFICATION,
cust.ACCOUNT_OFFICER,
cust.CUSTOMER_STATUS,
cust.COUNTRY_OF_REGISTRATION_RESIDENCE,
cust.NATIONALITY_CODE,
cust.CORRESPONDENT_BANK_ID,
cust.CORRESPONDENT_BRANCH_ID,
CONCAT(CUST.CORRESPONDENT_BANK_ID ,CUST.CORRESPONDENT_BRANCH_ID) cbid,
cust_class.BANK_INDICATOR,
cust_class.INDIVIDUAL_NON_INDIVIDUAL,
accnt.ACCOUNT_COUNTRY_CODE,
accnt.GROUP_MEMBER_ABBREVIATION,
accnt.ACCOUNT_BRANCH,
accnt.ACCOUNT_NUMBER_SERIAL,
accnt.ACCOUNT_SUFFIX,
CONCAT(accnt.ACCOUNT_COUNTRY_CODE ,accnt.GROUP_MEMBER_ABBREVIATION, lpad(concat(floor(accnt.ACCOUNT_BRANCH)),3,'0') ,lpad(concat(floor(accnt.ACCOUNT_NUMBER_SERIAL)),6,'0') ,lpad(concat(floor(accnt.ACCOUNT_SUFFIX)),3,'0')) ACCOUNT_REFERENCE,
 NULL CARD_NUMBER,
accnt.ACCOUNT_SHORT_NAME,
accnt.CURRENCY,
accnt.ACCOUNT_PRODUCT_TYPE,
accnt.ACCOUNT_STATUS,
NULL ACCOUNT_TYPE,
'PL' ACCOUNT_FILE,
transaction_reference_number TRANSACTION_REF_NO,
 NULL SYSTEM_CODE_EXT,
 NULL EXTERNAL_ACCOUNT_NUMBER,
 NULL INTERNATIONAL_BANK_ACCOUNT_NUMBER,
 NULL EXTERNAL_ACCOUNT_GPS,
cust_group.CUSTOMER_GROUP  LOB_HUB_CUSTOMER_GROUP,
from_unixtime(unix_timestamp(),"yyyy-MM-dd")
 from 
customer_indvl_joint cust 
inner join 
pl_account accnt 
on cust.JOINT_COUNTRY_CODE=accnt.ACCOUNT_COUNTRY_CODE
and cust.JOINT_DOMESTIC_GROUP_MEMBER=accnt.DOMESTIC_CUSTOMER_GROUP_MEMBER
and cust.JOINT_CUSTOMER_BRANCH_NUMBER=accnt.CUSTOMER_BRANCH_NUMBER
and cust.JOINT_CUSTOMER_SERIAL_NUMBER=accnt.CUSTOMER_SERIAL_NUMBER
--and cust.MODE_FLAG=accnt.MODE_FLAG
left outer join CUST_GROUP cust_group
on cust.GHO_CUSTOMER_CLASSIFICATION=cust_group.GHO_CUSTOMER_CLASSIFICATION
left outer join CUST_CLASSIFICATION cust_class
ON cust.COUNTRY_CODE=cust_class.COUNTRY_CODE
AND cust.DOMESTIC_CUSTOMER_GROUP_MEMBER=cust_class.GROUP_MEMBER_ABBREVIATION
AND cust.GHO_CUSTOMER_CLASSIFICATION=cust_class.GHO_CUSTOMER_CLASSIFICATION;


use clu_poc;

insert overwrite table ALL_CUST_ACCT partition (ACCT='ipl')
select 
"N" FLAG_JOIN,
cust.COUNTRY_CODE,
cust.DOMESTIC_CUSTOMER_GROUP_MEMBER,
cust.CUSTOMER_BRANCH_NUMBER,
cust.CUSTOMER_SERIAL_NUMBER,
cust.MODE_FLAG,
concat(CUST.COUNTRY_CODE, CUST.DOMESTIC_CUSTOMER_GROUP_MEMBER, lpad(concat(floor(CUST.CUSTOMER_BRANCH_NUMBER)),3,'0'), lpad(concat(floor(CUST.CUSTOMER_SERIAL_NUMBER)),6,'0')) as CUSTOMER_REFERENCE, 
 NULL CUSTOMER_REFERENCE_2,
cust.CUSTOMER_FULL_NAME,
cust.CUSTOMER_NAME,
cust.CUSTOMER_SHORT_NAME,
cust.INDUSTRY_CODE,
cust.MARKET_SECTOR_1,
cust.CUSTOMER_LEGAL_TYPE,
cust.GHO_CUSTOMER_CLASSIFICATION,
cust.ACCOUNT_OFFICER,
cust.CUSTOMER_STATUS,
cust.COUNTRY_OF_REGISTRATION_RESIDENCE,
cust.NATIONALITY_CODE,
cust.CORRESPONDENT_BANK_ID,
cust.CORRESPONDENT_BRANCH_ID,
CONCAT(CUST.CORRESPONDENT_BANK_ID ,CUST.CORRESPONDENT_BRANCH_ID) cbid,
cust_class.BANK_INDICATOR,
cust_class.INDIVIDUAL_NON_INDIVIDUAL,
accnt.ACCOUNT_COUNTRY_CODE,
accnt.GROUP_MEMBER_ABBREVIATION,
accnt.ACCOUNT_BRANCH,
accnt.ACCOUNT_NUMBER_SERIAL,
accnt.ACCOUNT_SUFFIX,
CONCAT(accnt.ACCOUNT_COUNTRY_CODE ,accnt.GROUP_MEMBER_ABBREVIATION, lpad(concat(floor(accnt.ACCOUNT_BRANCH)),3,'0') ,lpad(concat(floor(accnt.ACCOUNT_NUMBER_SERIAL)),6,'0') ,lpad(concat(floor(accnt.ACCOUNT_SUFFIX)),3,'0')) ACCOUNT_REFERENCE,
 NULL CARD_NUMBER,
accnt.ACCOUNT_SHORT_NAME,
accnt.CURRENCY,
accnt.ACCOUNT_PRODUCT_TYPE,
accnt.ACCOUNT_STATUS,
NULL ACCOUNT_TYPE,
'PL' ACCOUNT_FILE,
transaction_reference_number TRANSACTION_REF_NO,
 NULL SYSTEM_CODE_EXT,
 NULL EXTERNAL_ACCOUNT_NUMBER,
 NULL INTERNATIONAL_BANK_ACCOUNT_NUMBER,
 NULL EXTERNAL_ACCOUNT_GPS,
cust_group.CUSTOMER_GROUP  LOB_HUB_CUSTOMER_GROUP,
from_unixtime(unix_timestamp(),"yyyy-MM-dd")
 from 
CUSTOMER_INDVL cust
right outer join
pl_account accnt
on cust.COUNTRY_CODE=accnt.ACCOUNT_COUNTRY_CODE
and cust.DOMESTIC_CUSTOMER_GROUP_MEMBER=accnt.DOMESTIC_CUSTOMER_GROUP_MEMBER
and cust.CUSTOMER_BRANCH_NUMBER=accnt.CUSTOMER_BRANCH_NUMBER
and cust.CUSTOMER_SERIAL_NUMBER=accnt.CUSTOMER_SERIAL_NUMBER
and cust.MODE_FLAG=accnt.MODE_FLAG
left outer join CUST_GROUP cust_group
on cust.GHO_CUSTOMER_CLASSIFICATION=cust_group.GHO_CUSTOMER_CLASSIFICATION
left outer join CUST_CLASSIFICATION cust_class
ON cust.COUNTRY_CODE=cust_class.COUNTRY_CODE
AND cust.DOMESTIC_CUSTOMER_GROUP_MEMBER=cust_class.GROUP_MEMBER_ABBREVIATION
AND cust.GHO_CUSTOMER_CLASSIFICATION=cust_class.GHO_CUSTOMER_CLASSIFICATION;

use clu_poc;

insert overwrite table ALL_CUST_ACCT partition (ACCT='jls')
select 
"Y" FLAG_JOIN,
cust.COUNTRY_CODE,
cust.DOMESTIC_CUSTOMER_GROUP_MEMBER,
cust.CUSTOMER_BRANCH_NUMBER,
cust.CUSTOMER_SERIAL_NUMBER,
cust.MODE_FLAG,
concat(CUST.COUNTRY_CODE, CUST.DOMESTIC_CUSTOMER_GROUP_MEMBER, lpad(concat(floor(CUST.CUSTOMER_BRANCH_NUMBER)),3,'0'), lpad(concat(floor(CUST.CUSTOMER_SERIAL_NUMBER)),6,'0')) as CUSTOMER_REFERENCE, 
 NULL CUSTOMER_REFERENCE_2,
cust.CUSTOMER_FULL_NAME,
cust.CUSTOMER_NAME,
cust.CUSTOMER_SHORT_NAME,
cust.INDUSTRY_CODE,
cust.MARKET_SECTOR_1,
cust.CUSTOMER_LEGAL_TYPE,
cust.GHO_CUSTOMER_CLASSIFICATION,
cust.ACCOUNT_OFFICER,
cust.CUSTOMER_STATUS,
cust.COUNTRY_OF_REGISTRATION_RESIDENCE,
cust.NATIONALITY_CODE,
cust.CORRESPONDENT_BANK_ID,
cust.CORRESPONDENT_BRANCH_ID,
CONCAT(CUST.CORRESPONDENT_BANK_ID ,CUST.CORRESPONDENT_BRANCH_ID) cbid,
cust_class.BANK_INDICATOR,
cust_class.INDIVIDUAL_NON_INDIVIDUAL,
accnt.ACCOUNT_COUNTRY_CODE,
accnt.GROUP_MEMBER_ABBREVIATION,
accnt.ACCOUNT_BRANCH,
accnt.ACCOUNT_NUMBER_SERIAL,
accnt.ACCOUNT_SUFFIX,
CONCAT(accnt.ACCOUNT_COUNTRY_CODE ,accnt.GROUP_MEMBER_ABBREVIATION, lpad(concat(floor(accnt.ACCOUNT_BRANCH)),3,'0') ,lpad(concat(floor(accnt.ACCOUNT_NUMBER_SERIAL)),6,'0') ,lpad(concat(floor(accnt.ACCOUNT_SUFFIX)),3,'0')) ACCOUNT_REFERENCE,
 NULL CARD_NUMBER,
accnt.ACCOUNT_SHORT_NAME,
accnt.CURRENCY,
accnt.ACCOUNT_PRODUCT_TYPE,
accnt.ACCOUNT_STATUS,
NULL ACCOUNT_TYPE,
'LS' ACCOUNT_FILE,
 NULL TRANSACTION_REF_NO,
 NULL SYSTEM_CODE_EXT,
 NULL EXTERNAL_ACCOUNT_NUMBER,
 NULL INTERNATIONAL_BANK_ACCOUNT_NUMBER,
 NULL EXTERNAL_ACCOUNT_GPS,
cust_group.CUSTOMER_GROUP  LOB_HUB_CUSTOMER_GROUP,
from_unixtime(unix_timestamp(),"yyyy-MM-dd")
 from 
customer_indvl_joint cust 
inner join 
ls_account accnt 
on cust.JOINT_COUNTRY_CODE=accnt.ACCOUNT_COUNTRY_CODE
and cust.JOINT_DOMESTIC_GROUP_MEMBER=accnt.DOMESTIC_CUSTOMER_GROUP_MEMBER
and cust.JOINT_CUSTOMER_BRANCH_NUMBER=accnt.CUSTOMER_BRANCH_NUMBER
and cust.JOINT_CUSTOMER_SERIAL_NUMBER=accnt.CUSTOMER_SERIAL_NUMBER
--and cust.MODE_FLAG=accnt.MODE_FLAG
left outer join CUST_GROUP cust_group
on cust.GHO_CUSTOMER_CLASSIFICATION=cust_group.GHO_CUSTOMER_CLASSIFICATION
left outer join CUST_CLASSIFICATION cust_class
ON cust.COUNTRY_CODE=cust_class.COUNTRY_CODE
AND cust.DOMESTIC_CUSTOMER_GROUP_MEMBER=cust_class.GROUP_MEMBER_ABBREVIATION
AND cust.GHO_CUSTOMER_CLASSIFICATION=cust_class.GHO_CUSTOMER_CLASSIFICATION;

use clu_poc;

insert overwrite table ALL_CUST_ACCT partition (ACCT='ils')
select 
"N" FLAG_JOIN,
cust.COUNTRY_CODE,
cust.DOMESTIC_CUSTOMER_GROUP_MEMBER,
cust.CUSTOMER_BRANCH_NUMBER,
cust.CUSTOMER_SERIAL_NUMBER,
cust.MODE_FLAG,
concat(CUST.COUNTRY_CODE, CUST.DOMESTIC_CUSTOMER_GROUP_MEMBER, lpad(concat(floor(CUST.CUSTOMER_BRANCH_NUMBER)),3,'0'), lpad(concat(floor(CUST.CUSTOMER_SERIAL_NUMBER)),6,'0')) as CUSTOMER_REFERENCE, 
 NULL CUSTOMER_REFERENCE_2,
cust.CUSTOMER_FULL_NAME,
cust.CUSTOMER_NAME,
cust.CUSTOMER_SHORT_NAME,
cust.INDUSTRY_CODE,
cust.MARKET_SECTOR_1,
cust.CUSTOMER_LEGAL_TYPE,
cust.GHO_CUSTOMER_CLASSIFICATION,
cust.ACCOUNT_OFFICER,
cust.CUSTOMER_STATUS,
cust.COUNTRY_OF_REGISTRATION_RESIDENCE,
cust.NATIONALITY_CODE,
cust.CORRESPONDENT_BANK_ID,
cust.CORRESPONDENT_BRANCH_ID,
CONCAT(CUST.CORRESPONDENT_BANK_ID ,CUST.CORRESPONDENT_BRANCH_ID) cbid,
cust_class.BANK_INDICATOR,
cust_class.INDIVIDUAL_NON_INDIVIDUAL,
accnt.ACCOUNT_COUNTRY_CODE,
accnt.GROUP_MEMBER_ABBREVIATION,
accnt.ACCOUNT_BRANCH,
accnt.ACCOUNT_NUMBER_SERIAL,
accnt.ACCOUNT_SUFFIX,
CONCAT(accnt.ACCOUNT_COUNTRY_CODE ,accnt.GROUP_MEMBER_ABBREVIATION, lpad(concat(floor(accnt.ACCOUNT_BRANCH)),3,'0') ,lpad(concat(floor(accnt.ACCOUNT_NUMBER_SERIAL)),6,'0') ,lpad(concat(floor(accnt.ACCOUNT_SUFFIX)),3,'0')) ACCOUNT_REFERENCE,
 NULL CARD_NUMBER,
accnt.ACCOUNT_SHORT_NAME,
accnt.CURRENCY,
accnt.ACCOUNT_PRODUCT_TYPE,
accnt.ACCOUNT_STATUS,
NULL ACCOUNT_TYPE,
'LS' ACCOUNT_FILE,
 NULL TRANSACTION_REF_NO,
 NULL SYSTEM_CODE_EXT,
 NULL EXTERNAL_ACCOUNT_NUMBER,
 NULL INTERNATIONAL_BANK_ACCOUNT_NUMBER,
 NULL EXTERNAL_ACCOUNT_GPS,
cust_group.CUSTOMER_GROUP  LOB_HUB_CUSTOMER_GROUP,
from_unixtime(unix_timestamp(),"yyyy-MM-dd")
 from 
CUSTOMER_INDVL cust
right outer join
ls_account accnt
on cust.COUNTRY_CODE=accnt.ACCOUNT_COUNTRY_CODE
and cust.DOMESTIC_CUSTOMER_GROUP_MEMBER=accnt.DOMESTIC_CUSTOMER_GROUP_MEMBER
and cust.CUSTOMER_BRANCH_NUMBER=accnt.CUSTOMER_BRANCH_NUMBER
and cust.CUSTOMER_SERIAL_NUMBER=accnt.CUSTOMER_SERIAL_NUMBER
and cust.MODE_FLAG=accnt.MODE_FLAG
left outer join CUST_GROUP cust_group
on cust.GHO_CUSTOMER_CLASSIFICATION=cust_group.GHO_CUSTOMER_CLASSIFICATION
left outer join CUST_CLASSIFICATION cust_class
ON cust.COUNTRY_CODE=cust_class.COUNTRY_CODE
AND cust.DOMESTIC_CUSTOMER_GROUP_MEMBER=cust_class.GROUP_MEMBER_ABBREVIATION
AND cust.GHO_CUSTOMER_CLASSIFICATION=cust_class.GHO_CUSTOMER_CLASSIFICATION;

use clu_poc;

insert overwrite table ALL_CUST_ACCT partition (ACCT='jcp')
select 
"Y" FLAG_JOIN,
cust.COUNTRY_CODE,
cust.DOMESTIC_CUSTOMER_GROUP_MEMBER,
cust.CUSTOMER_BRANCH_NUMBER,
cust.CUSTOMER_SERIAL_NUMBER,
cust.MODE_FLAG,
concat(CUST.COUNTRY_CODE, CUST.DOMESTIC_CUSTOMER_GROUP_MEMBER, lpad(concat(floor(CUST.CUSTOMER_BRANCH_NUMBER)),3,'0'), lpad(concat(floor(CUST.CUSTOMER_SERIAL_NUMBER)),6,'0')) as CUSTOMER_REFERENCE, 
 NULL CUSTOMER_REFERENCE_2,
cust.CUSTOMER_FULL_NAME,
cust.CUSTOMER_NAME,
cust.CUSTOMER_SHORT_NAME,
cust.INDUSTRY_CODE,
cust.MARKET_SECTOR_1,
cust.CUSTOMER_LEGAL_TYPE,
cust.GHO_CUSTOMER_CLASSIFICATION,
cust.ACCOUNT_OFFICER,
cust.CUSTOMER_STATUS,
cust.COUNTRY_OF_REGISTRATION_RESIDENCE,
cust.NATIONALITY_CODE,
cust.CORRESPONDENT_BANK_ID,
cust.CORRESPONDENT_BRANCH_ID,
CONCAT(CUST.CORRESPONDENT_BANK_ID ,CUST.CORRESPONDENT_BRANCH_ID) cbid,
cust_class.BANK_INDICATOR,
cust_class.INDIVIDUAL_NON_INDIVIDUAL,
 NULL DOMESTIC_CUSTOMER_COUNTRY,
 NULL GROUP_MEMBER_ABBREVIATION,
 NULL ACCOUNT_BRANCH,
 NULL ACCOUNT_NUMBER_SERIAL,
 NULL ACCOUNT_SUFFIX,
 NULL  ACCOUNT_REFERENCE,
accnt.ACCOUNT_NUMBER CARD_NUMBER,
accnt.ACCOUNT_SHORT_NAME,
accnt.CURRENCY,
accnt.ACCOUNT_PRODUCT_TYPE,
accnt.ACCOUNT_STATUS,
 NULL ACCOUNT_TYPE,
 'CP' ACCOUNT_FILE,
 NULL TRANSACTION_REF_NO,
 NULL SYSTEM_CODE_EXT,
 NULL EXTERNAL_ACCOUNT_NUMBER,
 NULL INTERNATIONAL_BANK_ACCOUNT_NUMBER,
 NULL EXTERNAL_ACCOUNT_GPS,
cust_group.CUSTOMER_GROUP  LOB_HUB_CUSTOMER_GROUP,
from_unixtime(unix_timestamp(),"yyyy-MM-dd")
 from 
CUSTOMER_INDVL_JOINT cust 
inner join 
CP_ACCOUNT accnt 
on cust.JOINT_COUNTRY_CODE=accnt.DOMESTIC_CUSTOMER_COUNTRY
and cust.JOINT_DOMESTIC_GROUP_MEMBER=accnt.DOMESTIC_CUSTOMER_GROUP_MEMBER
and cust.JOINT_CUSTOMER_BRANCH_NUMBER=accnt.TPC_BRANCH_NUMBER
and cust.JOINT_CUSTOMER_SERIAL_NUMBER=accnt.TPC_CUSTOMER_SERIAL_NUMBER
--and cust.MODE_FLAG=accnt.MODE_FLAG
left outer join CUST_GROUP cust_group
on cust.GHO_CUSTOMER_CLASSIFICATION=cust_group.GHO_CUSTOMER_CLASSIFICATION
left outer join CUST_CLASSIFICATION cust_class
ON cust.COUNTRY_CODE=cust_class.COUNTRY_CODE
AND cust.DOMESTIC_CUSTOMER_GROUP_MEMBER=cust_class.GROUP_MEMBER_ABBREVIATION
AND cust.GHO_CUSTOMER_CLASSIFICATION=cust_class.GHO_CUSTOMER_CLASSIFICATION;

use clu_poc;

insert overwrite table ALL_CUST_ACCT partition (ACCT='icp')
select 
"N" FLAG_JOIN,
cust.COUNTRY_CODE,
cust.DOMESTIC_CUSTOMER_GROUP_MEMBER,
cust.CUSTOMER_BRANCH_NUMBER,
cust.CUSTOMER_SERIAL_NUMBER,
cust.MODE_FLAG,
concat(CUST.COUNTRY_CODE, CUST.DOMESTIC_CUSTOMER_GROUP_MEMBER, lpad(concat(floor(CUST.CUSTOMER_BRANCH_NUMBER)),3,'0'), lpad(concat(floor(CUST.CUSTOMER_SERIAL_NUMBER)),6,'0')) as CUSTOMER_REFERENCE, 
 NULL CUSTOMER_REFERENCE_2,
cust.CUSTOMER_FULL_NAME,
cust.CUSTOMER_NAME,
cust.CUSTOMER_SHORT_NAME,
cust.INDUSTRY_CODE,
cust.MARKET_SECTOR_1,
cust.CUSTOMER_LEGAL_TYPE,
cust.GHO_CUSTOMER_CLASSIFICATION,
cust.ACCOUNT_OFFICER,
cust.CUSTOMER_STATUS,
cust.COUNTRY_OF_REGISTRATION_RESIDENCE,
cust.NATIONALITY_CODE,
cust.CORRESPONDENT_BANK_ID,
cust.CORRESPONDENT_BRANCH_ID,
CONCAT(CUST.CORRESPONDENT_BANK_ID ,CUST.CORRESPONDENT_BRANCH_ID) cbid,
cust_class.BANK_INDICATOR,
cust_class.INDIVIDUAL_NON_INDIVIDUAL,
 NULL domestic_customer_country,
 NULL GROUP_MEMBER_ABBREVIATION,
 NULL ACCOUNT_BRANCH,
 NULL ACCOUNT_NUMBER_SERIAL,
 NULL ACCOUNT_SUFFIX,
 NULL  ACCOUNT_REFERENCE,
accnt.account_number CARD_NUMBER,
accnt.ACCOUNT_SHORT_NAME,
accnt.CURRENCY,
accnt.ACCOUNT_PRODUCT_TYPE,
accnt.ACCOUNT_STATUS,
 NULL ACCOUNT_TYPE,
 'CP' ACCOUNT_FILE,
 NULL TRANSACTION_REF_NO,
 NULL SYSTEM_CODE_EXT,
 NULL EXTERNAL_ACCOUNT_NUMBER,
 NULL INTERNATIONAL_BANK_ACCOUNT_NUMBER,
 NULL EXTERNAL_ACCOUNT_GPS,
cust_group.CUSTOMER_GROUP  LOB_HUB_CUSTOMER_GROUP,
from_unixtime(unix_timestamp(),"yyyy-MM-dd")
 from 
CUSTOMER_INDVL cust
right outer join
CP_ACCOUNT accnt
on cust.COUNTRY_CODE=accnt.domestic_customer_country
and cust.DOMESTIC_CUSTOMER_GROUP_MEMBER=accnt.DOMESTIC_CUSTOMER_GROUP_MEMBER
and cust.CUSTOMER_BRANCH_NUMBER=accnt.tpc_branch_number
and cust.CUSTOMER_SERIAL_NUMBER=accnt.tpc_CUSTOMER_SERIAL_NUMBER
--and cust.MODE_FLAG=accnt.MODE_FLAG
left outer join CUST_GROUP cust_group
on cust.GHO_CUSTOMER_CLASSIFICATION=cust_group.GHO_CUSTOMER_CLASSIFICATION
left outer join CUST_CLASSIFICATION cust_class
ON cust.COUNTRY_CODE=cust_class.COUNTRY_CODE
AND cust.DOMESTIC_CUSTOMER_GROUP_MEMBER=cust_class.GROUP_MEMBER_ABBREVIATION
AND cust.GHO_CUSTOMER_CLASSIFICATION=cust_class.GHO_CUSTOMER_CLASSIFICATION;

use clu_poc;

insert overwrite table ALL_CUST_ACCT partition (ACCT='jdd')
select 
"Y" FLAG_JOIN,
cust.COUNTRY_CODE,
cust.DOMESTIC_CUSTOMER_GROUP_MEMBER,
cust.CUSTOMER_BRANCH_NUMBER,
cust.CUSTOMER_SERIAL_NUMBER,
cust.MODE_FLAG,
concat(CUST.COUNTRY_CODE, CUST.DOMESTIC_CUSTOMER_GROUP_MEMBER, lpad(concat(floor(CUST.CUSTOMER_BRANCH_NUMBER)),3,'0'), lpad(concat(floor(CUST.CUSTOMER_SERIAL_NUMBER)),6,'0')) as CUSTOMER_REFERENCE, 
 NULL CUSTOMER_REFERENCE_2,
cust.CUSTOMER_FULL_NAME,
cust.CUSTOMER_NAME,
cust.CUSTOMER_SHORT_NAME,
cust.INDUSTRY_CODE,
cust.MARKET_SECTOR_1,
cust.CUSTOMER_LEGAL_TYPE,
cust.GHO_CUSTOMER_CLASSIFICATION,
cust.ACCOUNT_OFFICER,
cust.CUSTOMER_STATUS,
cust.COUNTRY_OF_REGISTRATION_RESIDENCE,
cust.NATIONALITY_CODE,
cust.CORRESPONDENT_BANK_ID,
cust.CORRESPONDENT_BRANCH_ID,
CONCAT(CUST.CORRESPONDENT_BANK_ID ,CUST.CORRESPONDENT_BRANCH_ID) cbid,
cust_class.BANK_INDICATOR,
cust_class.INDIVIDUAL_NON_INDIVIDUAL,
accnt.ACCOUNT_COUNTRY_CODE,
accnt.GROUP_MEMBER_ABBREVIATION,
accnt.ACCOUNT_BRANCH,
accnt.ACCOUNT_NUMBER_SERIAL,
accnt.ACCOUNT_SUFFIX,
CONCAT(accnt.ACCOUNT_COUNTRY_CODE ,accnt.GROUP_MEMBER_ABBREVIATION, lpad(concat(floor(accnt.ACCOUNT_BRANCH)),3,'0') ,lpad(concat(floor(accnt.ACCOUNT_NUMBER_SERIAL)),6,'0') ,lpad(concat(floor(accnt.ACCOUNT_SUFFIX)),3,'0')) ACCOUNT_REFERENCE,
 NULL CARD_NUMBER,
accnt.ACCOUNT_SHORT_NAME,
accnt.CURRENCY,
accnt.ACCOUNT_PRODUCT_TYPE,
accnt.ACCOUNT_STATUS,
NULL ACCOUNT_TYPE,
'DD' ACCOUNT_FILE,
 NULL TRANSACTION_REF_NO,
 NULL SYSTEM_CODE_EXT,
 NULL EXTERNAL_ACCOUNT_NUMBER,
 NULL INTERNATIONAL_BANK_ACCOUNT_NUMBER,
 NULL EXTERNAL_ACCOUNT_GPS,
cust_group.CUSTOMER_GROUP  LOB_HUB_CUSTOMER_GROUP,
from_unixtime(unix_timestamp(),"yyyy-MM-dd")
 from 
customer_indvl_joint cust  
inner join 
dd_account accnt 
on cust.JOINT_COUNTRY_CODE=accnt.ACCOUNT_COUNTRY_CODE
and cust.JOINT_DOMESTIC_GROUP_MEMBER=accnt.DOMESTIC_CUSTOMER_GROUP_MEMBER
and cust.JOINT_CUSTOMER_BRANCH_NUMBER=accnt.CUSTOMER_BRANCH_NUMBER
and cust.JOINT_CUSTOMER_SERIAL_NUMBER=accnt.CUSTOMER_SERIAL_NUMBER
--and cust.MODE_FLAG=accnt.MODE_FLAG
left outer join CUST_GROUP cust_group
on cust.GHO_CUSTOMER_CLASSIFICATION=cust_group.GHO_CUSTOMER_CLASSIFICATION
left outer join CUST_CLASSIFICATION cust_class
ON cust.COUNTRY_CODE=cust_class.COUNTRY_CODE
AND cust.DOMESTIC_CUSTOMER_GROUP_MEMBER=cust_class.GROUP_MEMBER_ABBREVIATION
AND cust.GHO_CUSTOMER_CLASSIFICATION=cust_class.GHO_CUSTOMER_CLASSIFICATION;

use clu_poc;

insert overwrite table ALL_CUST_ACCT partition (ACCT='idd')
select 
"N" FLAG_JOIN,
cust.COUNTRY_CODE,
cust.DOMESTIC_CUSTOMER_GROUP_MEMBER,
cust.CUSTOMER_BRANCH_NUMBER,
cust.CUSTOMER_SERIAL_NUMBER,
cust.MODE_FLAG,
concat(CUST.COUNTRY_CODE, CUST.DOMESTIC_CUSTOMER_GROUP_MEMBER, lpad(concat(floor(CUST.CUSTOMER_BRANCH_NUMBER)),3,'0'), lpad(concat(floor(CUST.CUSTOMER_SERIAL_NUMBER)),6,'0')) as CUSTOMER_REFERENCE, 
 NULL CUSTOMER_REFERENCE_2,
cust.CUSTOMER_FULL_NAME,
cust.CUSTOMER_NAME,
cust.CUSTOMER_SHORT_NAME,
cust.INDUSTRY_CODE,
cust.MARKET_SECTOR_1,
cust.CUSTOMER_LEGAL_TYPE,
cust.GHO_CUSTOMER_CLASSIFICATION,
cust.ACCOUNT_OFFICER,
cust.CUSTOMER_STATUS,
cust.COUNTRY_OF_REGISTRATION_RESIDENCE,
cust.NATIONALITY_CODE,
cust.CORRESPONDENT_BANK_ID,
cust.CORRESPONDENT_BRANCH_ID,
CONCAT(CUST.CORRESPONDENT_BANK_ID ,CUST.CORRESPONDENT_BRANCH_ID) cbid,
cust_class.BANK_INDICATOR,
cust_class.INDIVIDUAL_NON_INDIVIDUAL,
accnt.ACCOUNT_COUNTRY_CODE,
accnt.GROUP_MEMBER_ABBREVIATION,
accnt.ACCOUNT_BRANCH,
accnt.ACCOUNT_NUMBER_SERIAL,
accnt.ACCOUNT_SUFFIX,
CONCAT(accnt.ACCOUNT_COUNTRY_CODE ,accnt.GROUP_MEMBER_ABBREVIATION, lpad(concat(floor(accnt.ACCOUNT_BRANCH)),3,'0') ,lpad(concat(floor(accnt.ACCOUNT_NUMBER_SERIAL)),6,'0') ,lpad(concat(floor(accnt.ACCOUNT_SUFFIX)),3,'0')) ACCOUNT_REFERENCE,
 NULL CARD_NUMBER,
accnt.ACCOUNT_SHORT_NAME,
accnt.CURRENCY,
accnt.ACCOUNT_PRODUCT_TYPE,
accnt.ACCOUNT_STATUS,
NULL ACCOUNT_TYPE,
'DD' ACCOUNT_FILE,
 NULL TRANSACTION_REF_NO,
 NULL SYSTEM_CODE_EXT,
 NULL EXTERNAL_ACCOUNT_NUMBER,
 NULL INTERNATIONAL_BANK_ACCOUNT_NUMBER,
 NULL EXTERNAL_ACCOUNT_GPS,
cust_group.CUSTOMER_GROUP  LOB_HUB_CUSTOMER_GROUP,
from_unixtime(unix_timestamp(),"yyyy-MM-dd")
 from 
CUSTOMER_INDVL cust
right outer join
dd_account accnt
on cust.COUNTRY_CODE=accnt.ACCOUNT_COUNTRY_CODE
and cust.DOMESTIC_CUSTOMER_GROUP_MEMBER=accnt.DOMESTIC_CUSTOMER_GROUP_MEMBER
and cust.CUSTOMER_BRANCH_NUMBER=accnt.CUSTOMER_BRANCH_NUMBER
and cust.CUSTOMER_SERIAL_NUMBER=accnt.CUSTOMER_SERIAL_NUMBER
and cust.MODE_FLAG=accnt.MODE_FLAG
left outer join CUST_GROUP cust_group
on cust.GHO_CUSTOMER_CLASSIFICATION=cust_group.GHO_CUSTOMER_CLASSIFICATION
left outer join CUST_CLASSIFICATION cust_class
ON cust.COUNTRY_CODE=cust_class.COUNTRY_CODE
AND cust.DOMESTIC_CUSTOMER_GROUP_MEMBER=cust_class.GROUP_MEMBER_ABBREVIATION
AND cust.GHO_CUSTOMER_CLASSIFICATION=cust_class.GHO_CUSTOMER_CLASSIFICATION;

